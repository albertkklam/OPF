@testset "compare with anirudh" begin
## Anirudh ccopf: lossless == true 30bus
# include("acopf.jl")
# opfdata = opf_loaddata("data/case30")
# opfmodel = acopf_model(opfdata; lossless = true)
# opfmodel,status = acopf_solve(opfmodel,opfdata)
# d = JuMP.NLPEvaluator(opfmodel)
# MathOptInterface.initialize(d, [:Grad])
# g = zeros(142)
# MathOptInterface.eval_constraint(d, g, value.(all_variables(opfmodel)))
# P̄g = value.(opfmodel[:Pg])
# Q̄g = value.(opfmodel[:Qg])
# V̄m = value.(opfmodel[:Vm])
# V̄a = value.(opfmodel[:Va])

P̄g = [
0.37129423136553685
0.49497843277805037
0.2280332275283329
0.4700871492090678
0.18555594942621165
0.14205100969280024
]
Q̄g = [
-0.19999999155403106
 0.5547761335156727
 0.25186568483631233
 0.11090751457155029
 0.12114904598115599
 0.14173434999044124
]
V̄m = [
1.05
1.0611478221183583
1.0465630226832563
1.0459944874972267
1.049082291346617
1.0415822137470199
1.0399916484103562
1.0321848454620017
1.044359182490445
1.0458825351847425
1.044359182490445
1.05
1.0684073329964747
1.0478433291316183
1.049280945477022
1.0443456267174538
1.042280857881899
1.0430259530893307
1.0405195220679133
1.0414700152483358
1.05
1.053321129483923
1.060489506327169
1.0492744852941673
1.05
1.0415308638013527
1.0562146378206991
1.041546328022642
1.05
1.0476106547106012
]
V̄a = [
0.0
-0.010654223695588392
-0.02999394636189346
-0.035454765629158135
-0.033853853998444414
-0.04075346592170742
-0.0480560005923432
-0.04913520268064029
-0.053623063459294726
-0.06033642867663531
-0.053623063459294726
-0.05700759939368362
-0.03927922364628982
-0.06602567897997728
-0.06168927164526019
-0.0648959132019709
-0.06633591687460375
-0.07539134847681764
-0.07972288342080384
-0.0759221612965376
-0.05664980793102611
-0.05243932263146969
-0.037544380902186654
-0.0422110815883048
-0.0030922295482066348
-0.015254114754681969
0.02826428568463676
-0.035233986240878055
0.0053933283888301115
-0.009492659543092126
]
z̄ = [P̄g; Q̄g; V̄m; V̄a]
options = Dict()
options[:lossless] = true
dm = OPF.acopf_model(opfdata, options)
dm = OPF.acopf_solve(dm, opfdata)
dm_eval = setup(dm.m);
dm_zbar = copy(dm_eval.last_x);
OPF.acopf_outputAll(dm, opfdata)
@test norm(dm_zbar - z̄) <= tol
end # testset